{"version":3,"sources":["pages/signUpForm.js","pages/signInForm.js","App.js","serviceWorker.js","index.js"],"names":["signUpForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","email","password","hasAgreed","hasErrors","handleChange","bind","assertThisInitialized","handleSubmit","e","target","value","type","checked","console","log","valueOf","length","setState","defineProperty","preventDefault","values","react_default","a","createElement","className","action","onSubmit","noValidate","htmlFor","id","placeholder","onChange","href","react_router_dom","to","Component","signInForm","App","activeClassName","exact","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc451112.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst formValid = hasErrors => {\r\n  let valid = true;\r\n\r\n  //Object.hasOwnProperty(hasErrors) === true && (valid = false);\r\n\r\n  //hasErrors.hasOwnProperty(myProp)\r\n  //var myProp = 'prop';\r\n  // if(Object.values(hasErrors).indexOf()){\r\n  //   valid = false\r\n  // }else valid = true\r\n\r\n  //Object.values(hasErrors).each();\r\n\r\n  console.log(Object.values(hasErrors), Object.values(hasErrors).length, hasErrors)\r\n  \r\n  return valid;\r\n}\r\n\r\nclass signUpForm extends Component{\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        hasAgreed: false,\r\n        hasErrors: {}\r\n      }\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(e){\r\n      let target = e.target;\r\n      let value = target.type === 'checkbox' ? target.checked : target.value;\r\n      let name = target.name;\r\n      let hasErrors = this.state.hasErrors;\r\n\r\n      console.log(this.props.valueOf());\r\n      //console.log([name] + '-' +value)\r\n\r\n      switch(name){\r\n        case 'name': \r\n          hasErrors.name = value.length < 3 && value.length > 0 ? 'Minimum 3 charectors required.' : '';\r\n          break;\r\n        case 'email': \r\n          hasErrors.email = value.length < 3 && value.length > 0 ? 'Minimum 3 charectors required.' : '';\r\n          break;\r\n        case 'password': \r\n          hasErrors.password = value.length < 3 && value.length > 0 ? 'Minimum 3 charectors required.' : '';\r\n          break;\r\n        case 'hasAgreed': \r\n          hasErrors.hasAgreed = target.checked !== true ? 'Please check terms of services.' : '';\r\n          break;\r\n        default:\r\n        break;\r\n      }\r\n      \r\n      this.setState({[name]: value }, console.log(this.state));\r\n\r\n    }\r\n\r\n    handleSubmit(e){\r\n      e.preventDefault();\r\n      //console.log(this.state);\r\n      if(formValid(this.state.hasErrors)){\r\n        console.log(this.state);\r\n      }else{\r\n        console.error('Invalid Forms');\r\n      }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"FormCenter\" >\r\n                <form action=\"\" className=\"FormField\" onSubmit={this.handleSubmit} noValidate>\r\n                  <div className=\"FormField\">\r\n                    <label className=\"FormField__Label\" htmlFor=\"name\">Full Name</label>\r\n                    <input type=\"text\" className=\"FormField__Input\" id=\"name\" placeholder=\"Enter your full name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                  </div>\r\n\r\n                  <div className=\"FormField\">\r\n                    <label className=\"FormField__Label\" htmlFor=\"email\">E-mail Address</label>\r\n                    <input type=\"email\" className=\"FormField__Input\" id=\"email\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                  </div>\r\n\r\n                  <div className=\"FormField\">\r\n                    <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" className=\"FormField__Input\" id=\"password\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                  </div>\r\n\r\n                  <div className=\"FormField\">\r\n                    <label className=\"FormField__CheckboxLabel\" htmlFor=\"hasAgreed\">\r\n                      <input type=\"checkbox\" className=\"FormField__CheckboxLabel\" name=\"hasAgreed\" id=\"hasAgreed\" value={this.state.hasAgreed} onChange={this.handleChange} /> I agree all statements in <a href=\"/#\" className=\"FormField__TermsLink\">terms of services</a>\r\n                    </label>                \r\n                  </div>\r\n\r\n                  <div className=\"FormField\">\r\n                    <button className=\"FormField__Button mr-20\">Sign Up</button>\r\n                    <Link to=\"/sign-in\" className=\"FormField__Link\">I'm already member</Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default signUpForm;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass signInForm extends Component{\r\n    constructor(){\r\n      super();\r\n\r\n      this.state = {\r\n        email: '',\r\n        password: ''\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(e){\r\n      let target = e.target;\r\n      let value = target.type === 'checkbox' ? target.checked : target.value;\r\n      let name = target.name;\r\n\r\n      this.setState({\r\n        [name] : value\r\n      })\r\n    }\r\n\r\n    handleSubmit(e){\r\n      e.preventDefault();\r\n      console.log(this.state);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"FormCenter\">\r\n                <form action=\"\" className=\"FormField\" onSubmit={this.handleSubmit}>\r\n\r\n                  <div className=\"FormField\">\r\n                    <label className=\"FormField__Label\" htmlFor=\"Email\">E-mail Address</label>\r\n                    <input type=\"email\" className=\"FormField__Input\" id=\"email\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                  </div>\r\n\r\n                  <div className=\"FormField\">\r\n                    <label className=\"FormField__Label\" htmlFor=\"name\">Password</label>\r\n                    <input type=\"password\" className=\"FormField__Input\" id=\"password\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                  </div>\r\n                  \r\n                  <div className=\"FormField\">\r\n                    <button className=\"FormField__Button mr-20\">Sign In</button>\r\n                    <Link to=\"/\" className=\"FormField__Link\">Create new Account</Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default signInForm;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink} from 'react-router-dom';\r\nimport signUpForm from './pages/signUpForm';\r\nimport signInForm from './pages/signInForm';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"App__Aside\">\r\n            \r\n          </div>\r\n          <div className=\"App__Form\">\r\n            <div className=\"PageSwitcher\">\r\n              <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\r\n              <NavLink to=\"/\" exact activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\r\n            </div> \r\n\r\n            <div className=\"FormTitle\">\r\n              <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign In</NavLink> Or \r\n              <NavLink to=\"/\" exact activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\r\n            </div>\r\n\r\n            <Route exact path=\"/\" component={signUpForm}></Route>\r\n            <Route path=\"/sign-in\" component={signInForm}></Route>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}